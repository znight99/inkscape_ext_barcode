"""
Python barcode renderer for GS1-128 barcodes. Designed for use with Inkscape.
"""

from Code128 import Code128,FNC1
from Base import Barcode

fixai={
  '00':18,
  '01':14,
  '02':14,
  '10':-1,
  '11':6,
  '12':6,
  '13':6,
  '15':6,
  '16':6,
  '17':6,
  '20':2,
  '21':-1,
  '240':-1,
  '241':-1,
  '242':-1,
  '243':-1,
  '250':-1,
  '251':-1,
  '252':-1,
  '253':-1,
  '254':-1,
  '255':-1,
  '30':-1,
  '310':6,
  '311':6,
  '312':6,
  '313':6,
  '314':6,
  '315':6,
  '316':6,
  '320':6,
  '321':6,
  '322':6,
  '323':6,
  '324':6,
  '325':6,
  '326':6,
  '327':6,
  '328':6,
  '329':6,
  '330':6,
  '331':6,
  '332':6,
  '333':6,
  '334':6,
  '335':6,
  '336':6,
  '337':6,
  '340':6,
  '341':6,
  '342':6,
  '343':6,
  '344':6,
  '345':6,
  '346':6,
  '347':6,
  '348':6,
  '349':6,
  '350':6,
  '351':6,
  '352':6,
  '353':6,
  '354':6,
  '355':6,
  '356':6,
  '357':6,
  '360':6,
  '361':6,
  '362':6,
  '363':6,
  '364':6,
  '365':6,
  '366':6,
  '367':6,
  '368':6,
  '369':6,
  '37':-1,
  '390':-1,
  '391':-1,
  '392':-1,
  '393':-1,
  '394':-1,
  '400':-1,
  '401':-1,
  '402':-1,
  '403':-1,
  '410':13,
  '411':13,
  '412':13,
  '413':13,
  '414':13,
  '415':13,
  '420':-1,
  '421':-1,
  '422':-1,
  '423':-1,
  '424':-1,
  '425':-1,
  '426':-1,
  '427':-1,
  '7001':-1,
  '7002':-1,
  '7003':-1,
  '7004':-1,
  '7005':-1,
  '7006':-1,
  '7007':-1,
  '7008':-1,
  '7009':-1,
  '7010':-1,
  '703':-1,
  '710':-1,
  '711':-1,
  '712':-1,
  '713':-1,
  '8001':-1,
  '8002':-1,
  '8003':-1,
  '8004':-1,
  '8005':-1,
  '8006':-1,
  '8007':-1,
  '8008':-1,
  '8010':-1,
  '8011':-1,
  '8012':-1,
  '8017':-1,
  '8018':-1,
  '8019':-1,
  '8020':-1,
  '8110':-1,
  '8111':-1,
  '8200':-1,
  '90':-1,
  '91':-1,
  '92':-1,
  '93':-1,
  '94':-1,
  '95':-1,
  '96':-1,
  '97':-1,
  '98':-1,
  '99':-1
}

extai=[
  '310',  '311',  '312',  '313',  '314',  '315',  '316',  '320',  '321',  '322',  '323',  '324',  '325',  '326',  '327',  '328',
  '329',  '330',  '331',  '332',  '333',  '334',  '335',  '336',  '337',  '340',  '341',  '342',  '343',  '344',  '345',  '346',
  '347',  '348',  '349',  '350',  '351',  '352',  '353',  '354',  '355',  '356',  '357',  '360',  '361',  '362',  '363',  '364',
  '365',  '366',  '367',  '368',  '369',  '390',  '391',  '392',  '393',  '394',  '703',  
    ]

class GS1_128(Code128):
    """Main barcode object, generates the encoding bits here"""
    name='GS1-128'
        
    def encode(self, text):
        blocks=text.split('|')
        if len(self.addon)>0:
          blocks.append(self.addon)
        
        self.label=''

        t=FNC1
        for i in range(len(blocks)):
          block=blocks[i]
          s=''
          p=-1
          
          for c in block:
            if c=='(':
              pass
            elif c!=')':
              s+=c
            else:
              if len(s)>0 and p<0:
                p=len(s)
          ai=''
          if p>0:
            ai=s[0:p]
          else:
            if fixai.has_key(s[0:2]):
              ai=s[0:2]
            elif fixai.has_key(s[0:3]):
              ai=s[0:3]
            elif fixai.has_key(s[0:4]):
              ai=s[0:4]
            else:
              ai=s[0:3]
            p=len(ai)
          if not fixai.has_key(ai) and fixai.has_key(ai[0:-1]):
            eai=ai
            ai=ai[0:-1]
          elif fixai.has_key(ai) and ai in extai and len(ai)<len(s):
            eai=ai+s[len(ai)]
            p+=1
          else:
            eai=ai
          v=s[p:]
          if fixai.has_key(ai) and fixai[ai]>=0:
            if len(v)<fixai[ai]:
              v='0'*(fixai[ai]-len(v))+v
            else:
              v=v[0:fixai[ai]]
          self.label+='('+eai+')'+v
          
          block=s
          if i<len(blocks)-1 and (not fixai.has_key(ai) or fixai[ai]<0):
            block+=FNC1
          t+=block
        #import sys
        #sys.stderr.write(t.encode('utf8'))

        return Code128.encode(self,t)
        
    def fontSize(self):
      return 9

if __name__ == '__main__':
  r=GS1_128({ 'text':'1234567890|231231312312312|77'})
  print r.encode(r.label)